{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Item.svelte",
    "../../ItemHeader.svelte",
    "../../Pomodoro.svelte"
  ],
  "sourcesContent": [
    "<script>\n  //Library\n\n  //Data\n    import { _deleteItem } from \"./store.js\";\n\n\n  //Comonents\n\n  //variables\n  export let isComplete = false;\n  export let text = \"\";\n  export let id = \"0001\";\n\n  let placeholder = \"Describe the step...\";\n  let hidden = true;\n\n  $: console.log(isComplete);\n\n  //Visual\n  function toggleHidden() {\n    hidden = !hidden;\n  }\n\n  //Logic\n  function deleteItem() {\n    _deleteItem(this.parentElement.id)\n  }\n</script>\n\n<style>\n  input[type=\"text\"] {\n    border: none;\n    width: 30%;\n  }\n\n  button {\n    background:none;\n    border: none;\n  }\n\n  .hidden {\n    visibility: hidden;\n  }\n  .complete {\n    text-decoration: line-through;\n    color: grey;\n  }\n</style>\n\n<div\n  class=\"task\"\n  {id}\n  on:mouseenter={toggleHidden}\n  on:mouseleave={toggleHidden}>\n  <input type=\"checkbox\" class:hidden bind:checked={isComplete} />\n  <input type=\"text\" {placeholder} bind:value={text} class:complete={isComplete} />\n  <button class:hidden on:click={deleteItem}>ðŸ—‘</button>\n</div>\n",
    "<script>\n  import {_state, _addItem } from \"./store.js\";\n\n  export let name\n\n  function addItem() {\n    _addItem($_state.blockID)\n  }\n</script>\n\n<style>\n  button {\n    font-size: 0.6em;\n    border: none;\n    background: none;\n    margin-left: 1em;\n    color: #3366cc;\n  }\n</style>\n\n<h1 class=\"title is-4\">\n  {name}\n  <button on:click={addItem}>New Item +</button>\n</h1>\n",
    "<script>\n  import moment from \"moment\";\n\n  let pomodoroLengthInSeconds = 1500\n  let timer;\n  let state = \"Start\";\n  let newTimer = moment.duration(\"25:00\");\n\n  $: duration = pomodoroLengthInSeconds; //25 minutes\n  $: formattedTime = moment.utc(duration * 1000).format(\"mm:ss\");\n\n  function toggleTimer() {\n    if (state == \"Start\") {\n      timer = setInterval(() => {\n        duration--;\n      }, 1000);\n    }\n    toggleState();\n  }\n\n  function toggleState() {\n    if (state === \"Pause\") {\n      clearInterval(timer);\n    }\n    state = (state === \"Start\") ? \"Pause\" : \"Start\";\n  }\n\n    function resetTimer () {\n        duration = 1500\n        clearInterval(timer)\n    }\n\n\n</script>\n\n<style>\n.timer {\n    font-size: 2rem;\n}\n\n .is-primary {\n     width: 80px;\n }\n\n</style>\n\n<p class=\"timer\">{formattedTime}</p>\n<button on:click={toggleTimer} class=\"button is-primary\">{state}</button>\n<button on:click={resetTimer} class=\"button is-warning\">Reset</button>\n\n"
  ],
  "names": [],
  "mappings": "AA+BE,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,aAAC,CAAC,AAClB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,GAAG,AACZ,CAAC,AAED,MAAM,aAAC,CAAC,AACN,WAAW,IAAI,CACf,MAAM,CAAE,IAAI,AACd,CAAC,AAED,OAAO,aAAC,CAAC,AACP,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,SAAS,aAAC,CAAC,AACT,eAAe,CAAE,YAAY,CAC7B,KAAK,CAAE,IAAI,AACb,CAAC;ACpCD,MAAM,eAAC,CAAC,AACN,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,OAAO,AAChB,CAAC;ACmBH,MAAM,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACnB,CAAC,AAEA,WAAW,eAAC,CAAC,AACT,KAAK,CAAE,IAAI,AACf,CAAC"
}