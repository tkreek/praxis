{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { store_items } from \"./data/store.js\";\n\n  import Bulma from \"./components/Bulma.svelte\";\n\n  let items;\n\n  const unsubscribe = store_items.subscribe(value => {\n    items = value;\n  });\n\n  console.log(\"here are some items\", items);\n\n  function toggleComplete() {\n    console.log(this.id);\n    let id = this.id;\n\n    store_items.update(items => {\n      items.forEach(item => {\n        if (item.id === id) {\n          item.isComplete = !item.isComplete;\n        }\n      });\n      items.sort((a, b) => (a.isComplete > b.isComplete ? 1 : -1));\n      return items;\n    });\n  }\n\n  function removeItem() {\n    let id = this.parentElement.id;\n    store_items.update(items => {\n      items = items.filter(item => item.id !== id);\n      return items;\n    });\n  }\n\n  function sayHello() {\n    alert(\"say hello\");\n  }\n</script>\n\n<style>\n  .isComplete {\n    text-decoration: line-through;\n    color: grey;\n  }\n\n  button {\n    border: none;\n    background-color: white;\n  }\n</style>\n\n<Bulma />\n\n<section class=\"section\">\n  <div class=\"container\">\n    <ul>\n      {#each items as item, index}\n        <li class={item.isComplete ? 'isComplete' : ''} id={item.id}>\n          <span on:click={toggleComplete}>{item.text}</span>\n          <button>ðŸ–Š</button>\n          <button on:click={removeItem}>ðŸ—‘</button>\n        </li>\n      {/each}\n    </ul>\n  </div>\n</section>\n"
  ],
  "names": [],
  "mappings": "AA0CE,WAAW,eAAC,CAAC,AACX,eAAe,CAAE,YAAY,CAC7B,KAAK,CAAE,IAAI,AACb,CAAC,AAED,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,KAAK,AACzB,CAAC"
}