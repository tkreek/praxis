{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Item.svelte",
    "../../ItemList.svelte",
    "../../Sandbox.svelte"
  ],
  "sourcesContent": [
    "<script>\n  //Library\n\n  //Data\n\n  //Comonents\n\n  //variables\n  export let placeholder = \"Describe the step...\";\n  export let isComplete = false\n  export let hidden = true;\n  export let text = ''\n  export let id = '0001'\n\n  $: console.log(isComplete)\n\n  //Visual\n  function toggleHidden() {\n    hidden = !hidden;\n  }\n\n  //Logic\n  function deleteItem () {\n    console.log('itemDeleted')\n  }\n\n</script>\n\n<style>\n  input[type=\"text\"] {\n    border: none;\n    width: auto;\n  }\n  input[type=\"checkbox\"] {\n    font-size: 36px;\n  }\n\n  .hidden {\n    visibility: hidden;\n  }\n  .complete {\n    text-decoration: line-through;\n    color:grey;\n  }\n\n</style>\n\n<section class=\"section\">\n  <div class=\"container\">\n    <div class=\"task\" {id} on:mouseenter={toggleHidden} on:mouseleave={toggleHidden}>\n      <input type=\"checkbox\" class:hidden bind:checked={isComplete} />\n      <input type=\"text\" {placeholder} value={text} class:complete={isComplete} />\n      <button class:hidden on:click={deleteItem}>ðŸ—‘</button>\n    </div>\n\n  </div>\n</section>\n",
    "<script>\n  //Library\n\n  //Data\n\n  //Comonents\n\n  //variables\n  export let isComplete = false;\n  export let text = \"\";\n  export let id = \"0001\";\n\n  let placeholder = \"Describe the step...\";\n  let hidden = true;\n\n  $: console.log(isComplete);\n\n  //Visual\n  function toggleHidden() {\n    hidden = !hidden;\n  }\n\n  //Logic\n  function deleteItem() {\n    console.log(\"itemDeleted\");\n  }\n</script>\n\n<style>\n  input[type=\"text\"] {\n    border: none;\n    width: 30%;\n  }\n\n  button {\n    background:none;\n    border: none;\n  }\n\n  .hidden {\n    visibility: hidden;\n  }\n  .complete {\n    text-decoration: line-through;\n    color: grey;\n  }\n</style>\n\n<div\n  class=\"task\"\n  {id}\n  on:mouseenter={toggleHidden}\n  on:mouseleave={toggleHidden}>\n  <input type=\"checkbox\" class:hidden bind:checked={isComplete} />\n  <input type=\"text\" {placeholder} value={text} class:complete={isComplete} />\n  <button class:hidden on:click={deleteItem}>ðŸ—‘</button>\n</div>\n",
    "<script>\n  import { _items } from \"../data/store.js\";\n\n  import { flip } from \"svelte/animate\";\n  import { dndzone } from \"svelte-dnd-action\";\n  export let items;\n  //   [\n  //     { id: 1, isComplete: true, name: \"This is item is TRUE\" },\n  //     { id: 2, isComplete: false, name: \"This is very FALSE\" },\n  //     { id: 3, isComplete: true, name: \"This is FALSE too\" },\n  //     { id: 4, isComplete: false, name: \"This is TRUE too\" }\n  //   ];\n  const flipDurationMs = 300;\n  function handleDndConsider(e) {\n    items = e.detail.items;\n  }\n  function handleDndFinalize(e) {\n    items = e.detail.items;\n  }\n\n  function removeItem() {\n    console.log(\"remove item was called\");\n    let id = this.parentElement.parentElement.id;\n    _items.update(items => {\n      items = items.filter(item => item.id !== id);\n      return items;\n    });\n  }\n\n  function toggleComplete() {\n    let id = this.parentElement.id;\n    _items.update(items => {\n      items.forEach(item => {\n        if (item.id === id) {\n          item.isComplete = !item.isComplete;\n        }\n      });\n      console.log(items);\n      return items;\n    });\n  }\n\n  function onHover() {\n    console.log(this);\n  }\n</script>\n\n<style>\n  section {\n    padding: 0.3em;\n    /* this will allow the dragged element to scroll the list */\n    overflow: scroll;\n  }\n  div {\n    padding: 0.2em;\n    margin: 0.15em 0;\n  }\n\n  button {\n    border: none;\n    background: none;\n  }\n\n  .completed {\n    text-decoration: line-through;\n  }\n</style>\n\n<section\n  use:dndzone={{ items, flipDurationMs }}\n  on:consider={handleDndConsider}\n  on:finalize={handleDndFinalize}>\n  {#each items as item (item.id)}\n    <div animate:flip={{ duration: flipDurationMs }} id={item.id}>\n      <span\n        class:completed={item.isComplete !== true}\n        on:click={toggleComplete}>\n        {item.text}\n      </span>\n      <span>\n        <button>ðŸ–‹</button>\n      </span>\n      <span>\n        <button on:click={removeItem}>ðŸ—‘</button>\n      </span>\n    </div>\n  {/each}\n</section>\n",
    "<script>\n  $: hidden = true;\n\n  function testFunction() {\n    console.log(this);\n    hidden = !hidden;\n\n    console.log(hidden);\n  }\n</script>\n\n<style>\n  .hidden {\n    display: none;\n  }\n\n  .blue {\n    color: blue;\n  }\n</style>\n\n<span>\n\n  <button on:mouseenter={testFunction} on:mouseleave={testFunction} />\n  <div class:hidden={hidden === true}>now you see me</div>\n\n</span>\n"
  ],
  "names": [],
  "mappings": "AA6BE,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAC,CAAC,AAClB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACb,CAAC,AACD,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,eAAC,CAAC,AACtB,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,SAAS,eAAC,CAAC,AACT,eAAe,CAAE,YAAY,CAC7B,MAAM,IAAI,AACZ,CAAC;ACdD,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,aAAC,CAAC,AAClB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,GAAG,AACZ,CAAC,AAED,MAAM,aAAC,CAAC,AACN,WAAW,IAAI,CACf,MAAM,CAAE,IAAI,AACd,CAAC,AAED,OAAO,aAAC,CAAC,AACP,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,SAAS,aAAC,CAAC,AACT,eAAe,CAAE,YAAY,CAC7B,KAAK,CAAE,IAAI,AACb,CAAC;ACGD,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,KAAK,CAEd,QAAQ,CAAE,MAAM,AAClB,CAAC,AACD,GAAG,cAAC,CAAC,AACH,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,MAAM,CAAC,CAAC,AAClB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,UAAU,cAAC,CAAC,AACV,eAAe,CAAE,YAAY,AAC/B,CAAC;ACrDD,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,AACf,CAAC"
}